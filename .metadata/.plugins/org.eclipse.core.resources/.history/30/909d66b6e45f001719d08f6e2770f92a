package com.demo.kafka.producer;
//import java util properties
import java.util.Properties;
// import simple producer package
import org.apache.kafka.clients.producer.Producer;
// import kafka producer
import org.apache.kafka.clients.producer.KafkaProducer;
// import ProductRecord packages
import org.apache.kafka.clients.producer.ProducerRecord;

/**
 * 
 * class for handling messages and sending
 *  to broker to consume
 * 
 * @author rkumar
 *
 */
public class SimpleProducer {
	/**
	 * Function to initiate producer message flow
	 * @param topicName
	 */
	public void startProducer(String topicName) {
		Properties props = new Properties();
		 props.put("bootstrap.servers", "localhost:9092");
		 props.put("acks", "all");
		 props.put("retries", 0);
		 props.put("batch.size", 16384);
		 props.put("linger.ms", 1);
		 props.put("buffer.memory", 33554432);
		 props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
		 props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");

		 Producer<String, String> producer = new KafkaProducer<>(props);
		 for(int i = 0; i < 100; i++)
		     producer.send(new ProducerRecord<String, String>("my-topic", Integer.toString(i), Integer.toString(i)));

		 producer.close();
	}
	
	/**
	 * producer test function
	 * @param args
	 */
	public static void main(String args[]) {
		SimpleProducer simpleProducer = new SimpleProducer();
	}
	
}
